{"mode":"editor","version":1,"windowDimensions":{"x":288,"y":80,"width":1948,"height":1142},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{}},"project":{"path":"/Users/etrikp/git/idm-playbook","buffers":[{"text":"# IDM Ansible Playbook\n\nWelcome to Cloud IDM (Identity Management) release platform. This repository holds the ansible data for a multi-environment pipeline that supports the release of a the IDM RESTful Serivce from development to test and multiple production environments.\n\n## Why Ansible?\n\nAnsible is a best of breed tool. It's approach is focused more on infrastructure as data rather than infrastructure as code. It has very strong **orchestration** capabilities, in line with what fabric can do. It also has a powerful notions of **inventory**, **roles** and **playbooks**. To learn more about ansible check the docs out here http://docs.ansible.com.\n\n## What does multi-environment mean?\n\nIn a nut shell multi-environment is a simplistic notion of being able to deploy a service to multiple types in infrastructure with minimal need for infrastructure specific optimizations. The infrastructure optimizations are intended to be built in.\n\n### Inventory\nAnsible's **inventory** concept is leveraged to implement this multi-environment model. Inventories are home to the host definitions that make up the infrastructure that supports the IDM service (and in generally and service or application) on various target environments.\n\nIn this implementation, **Dynamic Inventories** are leveraged to support target environments that can be defined in:\n\n* **Vagrant** (Local Development)\n* **Nimbus** (OpenStack Virtualization)\n* **Cobbler** (Baremetal)\n\nThis allows us to apply Ansibles strong playbook and role concepts to a somewhat normalized set of resources. Some of the highlights are:\n\n 1. Capability to deploy a service to any supported environment with the same set of roles and plays\n 2. Define Discreet or Participate in Integrated testing environments\n  * Load Testing\n  * Functional Testing\n  * Integration Testing\n 3. Uniform Interface for Humans and Robots (Jenkins)\n  * Ansible inherits from the ```$USER``` environment for authorization and access\n    control (via ssh and the standard OS permissions facilities). This means\n    you will be restricted from deploying to certain environments/inventories if\n    you do not have ssh access.\n\n### Layout\n\nThis is an alternate layout to the standard recommended ansible best practice http://docs.ansible.com/playbooks_best_practices.html. This alternate layout is inventory-centric. Its optimized for dealing with multiple environments as explained above, each with thier respective group_vars and host_vars.\n\n```\n├── inventory\n│   ├── functional-test\n│   ├── load-test\n│   ├── pre-production\n│   ├── pre-telstra\n│   ├── production\n│   ├── telstra\n│   └── vagrant\n├── plays\n└── roles\n    ├── cloud_mgmt\n    ├── common\n    └── openldap_server\n```\n\nThis affords a highly dynamic, felxible framework for inventory orchestration.\n\n### Execution Examples\n\nSpin up a pre-production environment within Nimbus\n\n```\nlocalhost %> source openrc.sh\nlocalhost %> ansible-playbook -i inventory/pre-production plays/nimbus-infra.yml\n\nPLAY [create nimbus instance] *************************************************\n\nTASK: [launch openldap instance] **********************************************\nok: [localhost]\n\nTASK: [launch idm service instance] *******************************************\nok: [localhost]\n\nPLAY RECAP ********************************************************************\nlocalhost                  : ok=2    changed=0    unreachable=0    failed=0\n```\n\nWith Vagrant, we use the standard Vagrantfile and vagrant command to start.\n\n```\nlocalhost %> vagrant up\nBringing machine 'idmapi' up with 'virtualbox' provider...\n...\nBringing machine 'openldap' up with 'virtualbox' provider...\n...\n```\n\nWe can then run plays against the environments/inventories\n\n```\nlocalhost %> ansible-playbook -i inventory/pre-production plays/idmapi.yml\n\nPLAY [idmapi] *****************************************************************\n\nGATHERING FACTS ***************************************************************\n...snip...\nPLAY RECAP ********************************************************************\nidmapi                     : ok=6    changed=0    unreachable=0    failed=0\n```\n\nAnd the same thing against the vagrant boxes\n\n```\nlocalhost %> ansible-playbook -i inventory/vagrant plays/idmapi.yml\n\nPLAY [idmapi] *****************************************************************\n\nGATHERING FACTS ***************************************************************\n...snip...\nPLAY RECAP ********************************************************************\nidmapi                     : ok=6    changed=0    unreachable=0    failed=0\n```\n\nPing all the hosts that are in the nimbus group (hosted on nimbus)\n\n```\nlocalhost %> ansible nimbus -i inventory/pre-production -m ping\nidmapi | success >> {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n\nopenldap | success >> {\n    \"changed\": false,\n    \"ping\": \"pong\"\n}\n```\n\n## What about Puppet?\n\nAnsible and Puppet get along very well. The main use case for ansible in this regard is orchestration and deployment. It is acting in the capacity fabric would. Its easy to create a role to orchestrate ```puppet apply``` where need be.\n\n## Install\n\nRequires Python 2.7 and virtualenv (to learn more about virtualenv see http://docs.python-guide.org/en/latest/dev/virtualenvs/)\n\nRunning ```install.sh``` will check for Python 2.7 and virtualenv, if it finds both it will then proceed to create a virtual environment for python, activate it and install everything from requirements.txt\n\nThe full set of requirements as defined in requirements.txt\n\n```\nBabel==1.3\nGitPython==0.3.2.RC1\nJinja2==2.7.3\nMarkupSafe==0.23\nPyYAML==3.11\nansible==1.6.2\nansible-role-manager==0.4\nasync==0.6.1\ncolorama==0.3.1\necdsa==0.11\neventlet==0.14.0\ngitdb==0.5.4\ngreenlet==0.4.2\nhgapi==1.7.1\niso8601==0.1.10\nnetaddr==0.7.11\noslo.config==1.3.0\nparamiko==1.14.0\npbr==0.8.2\nprettytable==0.7.2\npycrypto==2.6.1\npython-cinderclient==1.0.9\npython-heatclient==0.2.9\npython-keystoneclient==0.9.0\npython-novaclient==2.17.0\npytz==2014.4\nrequests==2.3.0\nsemantic-version==2.3.0\nsimplejson==3.5.2\nsix==1.7.2\nsmmap==0.8.2\nwsgiref==0.1.2\n```\n\n## Getting Started\n\n# Dynamic Inventories\n\n-![alt text](http://i.imgur.com/WWLYo.gif \"Frustrated cat can't believe this is the 12th time he's clicked on an auto-linked README.md URL\")\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":24},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/etrikp/git/idm-playbook/README.md","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"c0de0000899d00ceb8bacfc03d6b9faefb87b4e5","deserializer":"TextBuffer"},{"text":"Babel==1.3\nGitPython==0.3.2.RC1\nJinja2==2.7.3\nMarkupSafe==0.23\nPyYAML==3.11\ngit+https://github.com/ansible/ansible.git@devel#egg=ansible\nansible-role-manager==0.4\nasync==0.6.1\ncolorama==0.3.1\necdsa==0.11\neventlet==0.14.0\ngitdb==0.5.4\ngreenlet==0.4.2\nhgapi==1.7.1\niso8601==0.1.10\nnetaddr==0.7.11\noslo.config==1.3.0\nparamiko==1.14.0\npbr==0.8.2\nprettytable==0.7.2\npycrypto==2.6.1\npython-cinderclient==1.0.9\npython-heatclient==0.2.9\npython-keystoneclient==0.9.0\npython-novaclient==2.17.0\npytz==2014.4\nrequests==2.3.0\nsemantic-version==2.3.0\nsimplejson==3.5.2\nsix==1.7.2\nsmmap==0.8.2\nwsgiref==0.1.2\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[32,0]],"tailed":true,"reversed":true,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":29,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/etrikp/git/idm-playbook/requirements.txt","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"0c85d4861eeeeb812a49f3dd68eca369a1275c5e","deserializer":"TextBuffer"},{"text":"#!/bin/bash\n#\n# Check for python and virtualenv\n\nset -e\n\nVENV_DIR=.venv\n\npython=`which python`\n\nif [[ $? -ne 0 ]]; then\n\techo \"No working python installation detected, please install Python 2.7\"\n\texit 1\nfihttps://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/getting-started-guides/vagrant.md\n\npy_version_ok=`python -c 'import sys; print(\"%i\" % (sys.hexversion<0x02070000))'`\n\nif [[ $py_version_ok -ne 0 ]]; then\n\techo \"Python 2.7 or greater must be installed\"\n\texit 1\nfi\n\necho \"Found Python at: $python\"\n\npip=`which pip`\n\nif [[ $? -ne 0 ]]; then\n\techo \"pip not installed, please install it https://pip.pypa.io/en/latest/installing.html\"\n\texit 1\nfi\necho \"Found pip at: $pip\"\n\nvirtualenv=`which virtualenv`\n\nif [[ $? -ne 0 ]]; then\n\techo \"virtualenv not installed, please install virtualenv 1.11 or greater.\"\nfi\n\necho \"Found virtualenv at: $virtualenv\"\necho \"\"\n\nif [[ ! -d \"$VENV_DIR\" ]]; then\n\techo \"Creating virtual environment\"\n\techo \"\"\n\tvirtualenv $VENV_DIR --no-site-packages\n\techo\"\"\n\techo \"Done!\"\nfi\n\nFULL_PATH=`python -c \"import os; print(os.path.realpath('.venv'))\"`\n\necho \"Activating Virtual environment\"\nsource $VENV_DIR/bin/activate\necho \"\"\necho \"Running pip install -r requirements.txt\"\n\npip install -r requirements.txt\n\necho \"Done!\"\necho \"\"\necho \"To being using the virtual environemnt, run source $VENV_DIR/bin/activate\"\n\n","markers":{"markers":{"1":{"id":1,"range":[[13,102],[13,102]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":33,"goalBufferRange":null},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[{"patches":[{"oldRange":[[13,2],[13,2]],"newRange":[[13,2],[13,102]],"oldText":"","newText":"https://github.com/GoogleCloudPlatform/kubernetes/blob/master/docs/getting-started-guides/vagrant.md","normalizeLineEndings":{},"markerPatches":{},"deserializer":"BufferPatch"}],"deserializer":"Transaction"}],"redoStack":[],"deserializer":"History"},"filePath":"/Users/etrikp/git/idm-playbook/install.sh","modifiedWhenLastPersisted":true,"digestWhenLastPersisted":"ba4dbfa37d0ff09aac63893994e45d43948375c5","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"children":[{"items":[{"id":24,"softTabs":true,"displayBuffer":{"id":25,"softWrap":false,"editorWidthInChars":216,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/etrikp/git/idm-playbook/README.md","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":29,"softTabs":true,"displayBuffer":{"id":30,"softWrap":false,"editorWidthInChars":107,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/etrikp/git/idm-playbook/requirements.txt","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":33,"softTabs":false,"displayBuffer":{"id":34,"softWrap":false,"editorWidthInChars":107,"scrollTop":202,"scrollLeft":6,"tokenizedBuffer":{"bufferPath":"/Users/etrikp/git/idm-playbook/install.sh","tabLength":2,"deserializer":"TokenizedBuffer"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"}],"activeItemUri":"/Users/etrikp/git/idm-playbook/README.md","focused":true,"active":true,"deserializer":"Pane"},{"items":[{"deserializer":"MarkdownPreviewView","filePath":"/Users/etrikp/git/idm-playbook/README.md","editorId":"24"}],"activeItemUri":"markdown-preview://editor/24","focused":false,"active":false,"deserializer":"Pane"}],"orientation":"horizontal","deserializer":"PaneAxis"},"deserializer":"PaneContainer"},"fullScreen":false,"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/etrikp/git/idm-playbook/README.md":1409336346417,"/Users/etrikp/git/idm-playbook/requirements.txt":1409333130790,"/Users/etrikp/git/idm-playbook/install.sh":1409333293325},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":338202480},"tree-view":{"directoryExpansionStates":{},"selectedPath":"/Users/etrikp/git/idm-playbook/README.md","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}