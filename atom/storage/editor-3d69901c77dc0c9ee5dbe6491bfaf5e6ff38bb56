{"mode":"editor","version":1,"windowDimensions":{"x":158,"y":125,"width":2389,"height":1095,"maximized":false},"syntax":{"deserializer":"Syntax","grammarOverridesByPath":{"/Users/etrikp/git/stratosphere-toolchain/roles/nagios/templates/cgi.cfg.j2":"source.jinja"}},"project":{"path":"/Users/etrikp/git/stratosphere-toolchain","buffers":[{"text":"---\n\n# Configure firewall\n- include: firewall.yml\n  tags:\n    - firewalld\n\n# Configuration\n- name: configure gitlab\n  template: src=gitlab.rb.j2 dest=/etc/gitlab/gitlab.rb mode=0644 owner=root group=root\n  notify:\n    - reconfigure gitlab\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":6996},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/tasks/config.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"70570fa69b6103bf0ab6db4a9045209611836d2b","deserializer":"TextBuffer"},{"text":"---\n# tasks file for gitlab_backup\n\n# Creates a cron file under /etc/cron.d\n- name: gitlab backup directory\n  file: name={{ gitlab_backup_path }} state=directory mode=0755\n  sudo: true\n\n- cron: name=\"backup gitlab\" minute=0 hour=0\n        user=\"root\" job=\"{{ gitlab_backup.job }}\"\n        cron_file=gitlab_backup\n  when: not gitlab_backup_to_swift\n\n- name: remove gitlab backup job\n  command: rm -f /etc/cron.d/gitlab_backup_swift\n  when: not gitlab_backup_to_swift\n  changed_when: false\n\n# Since there is sensative info in the cron job, pull it out\n# into its own script, restrict acces to the script, and call it from cron\n\n- cron: name=\"backup gitlab swift\" minute=0 hour=0\n        user=\"root\" job=\"{{ gitlab_backup.swift_job }}\"\n        cron_file=gitlab_backup_swift\n  when: gitlab_backup_to_swift\n\n- name: remove gitlab backup job\n  command: rm -f /etc/cron.d/gitlab_backup\n  when: gitlab_backup_to_swift\n  changed_when: false\n\n- cron: name=\"cleanup old config backups\" minute=0 hour=4\n        user=\"root\" job=\"{{ gitlab_backup.clean }}\"\n        cron_file=gitlab_backup_clean\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":7000},"deserializer":"Marker"},"4":{"id":4,"range":[[8,0],[11,34]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"},"5":{"id":5,"range":[[13,0],[33,37]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/tasks/backup.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"bcf3eeeb731cb44b3b43e86c8d9ef0924b59181e","deserializer":"TextBuffer"},{"text":"---\n# CentOS vars file for gitlab\n\ngitlab_packages:\n  - openssh-server\n  - postfix\n  - python-pip # Required for swift >= 2.3.0\n\ngitlab_pip_packages:\n  - python-swiftclient\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":7004},"deserializer":"Marker"},"3":{"id":3,"range":[[6,0],[9,22]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/vars/RedHat.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"af827646132a4fb710a3bf853ac5aabb5ba285e6","deserializer":"TextBuffer"},{"text":"---\n\n# defaults file for gitlab\n\ngitlab_username: root\ngitlab_password: 5iveL!fe\n\ngitlab_external_url: http://gitlab.example.com\ngitlab_backup_path: /var/gitlab-backups\ngitlab_backup_ttl: 604800\ngitlab_backup_to_swift: false\n\ngitlab_backup_swift:\n  auth_url: \"{{ lookup('env','OS_AUTH_URL') }}\"\n  tenant: \"{{ lookup('env','OS_TENANT_NAME') }}\"\n  user: \"{{ lookup('env','OS_USERNAME') }}\"\n  password: \"{{ lookup('env','OS_PASSWORD') }}\"\n  bucket: gitlab-backups\n\ngitlab_backup_command: sh -c 'cd {{ gitlab_backup_path }}; umask 0077; FN=$(date \"+\\\\%s-etc-gitlab.tar\"); tar -cf $FN -C / etc/gitlab; ln -fs $FN latest-etc-gitlab.tar && rm -f latest_gitlab_backup.tar && /opt/gitlab/bin/gitlab-rake gitlab:backup:create | grep gitlab_backup.tar | cut -d\\\" \\\" -f4 | xargs -I {} ln -fs {} latest_gitlab_backup.tar'\n\ngitlab_backup:\n  job: \"{{ gitlab_backup_command }}\"\n  swift_job: \"{{ gitlab_backup_command }} && cd {{ gitlab_backup_path }} && swift --os-auth-url {{ gitlab_backup_swift.auth_url }} --os-tenant-name {{ gitlab_backup_swift.tenant }} --os-username {{ gitlab_backup_swift.user }}  --os-password {{ gitlab_backup_swift.password }} upload {{ gitlab_backup_swift.bucket }} . --changed --skip-identical\"\n  clean: \"find {{ gitlab_backup_path }} -type f -mtime +7 | xargs rm > /dev/null 2>&1\"\n","markers":{"markers":{"1":{"id":1,"range":[[0,0],[0,0]],"tailed":false,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{"type":"selection","editorId":7008},"deserializer":"Marker"},"3":{"id":3,"range":[[10,0],[24,86]],"tailed":true,"reversed":false,"valid":true,"invalidate":"never","persistent":true,"properties":{},"deserializer":"Marker"}},"deserializer":"MarkerManager"},"history":{"undoStack":[],"redoStack":[],"deserializer":"History"},"filePath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/defaults/main.yml","modifiedWhenLastPersisted":false,"digestWhenLastPersisted":"e5c7bff979dd43f10fe95e6c59d407db65c02197","deserializer":"TextBuffer"}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":6996,"softTabs":true,"displayBuffer":{"id":6997,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/tasks/config.yml","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":7000,"softTabs":true,"displayBuffer":{"id":7001,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/tasks/backup.yml","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":7004,"softTabs":true,"displayBuffer":{"id":7005,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/vars/RedHat.yml","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"id":7008,"softTabs":true,"displayBuffer":{"id":7009,"softWrapped":false,"editorWidthInChars":null,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/defaults/main.yml","tabLength":2,"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"TokenizedBuffer"},"invisibles":{"eol":"¬","space":"·","tab":"»","cr":"¤"},"deserializer":"DisplayBuffer"},"deserializer":"Editor"},{"deserializer":"SettingsView","version":2,"activePanelName":"Packages","uri":"atom://config"}],"activeItemUri":"atom://config","focused":false,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-yaml","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"fuzzy-finder":{"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/tasks/config.yml":1411216960874,"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/tasks/backup.yml":1411216969116,"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/vars/RedHat.yml":1411216975353,"/Users/etrikp/git/stratosphere-toolchain/roles/gitlab/defaults/main.yml":1411216979690},"keybinding-resolver":{"attached":false},"metrics":{"sessionLength":176162719},"tree-view":{"directoryExpansionStates":{"openrc":{},"plays":{},"roles":{"gitlab":{"defaults":{},"tasks":{},"templates":{},"vars":{}},"logstash_forwarder":{"defaults":{}},"swift_mirror":{"tasks":{},"templates":{},"vars":{}}},"vagrant":{}},"hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":350,"width":259},"find-and-replace":{"viewState":"","modelState":{"useRegex":false,"inCurrentSelection":false,"caseSensitive":false},"projectViewState":"","resultsModelState":{"useRegex":false,"caseSensitive":false},"findHistory":["http://10.202.44.103/nagios/","PAGERDUTYACTION","sync","ignore_errors","enable","enable=yes","elas","packages","{\n  \"network\": {\n    \"servers\": [ \"{{ config.logstash_server_ip }}:{{ config.logstash_server_port }}\" ],\n    {%- if config.ssl_cert is defined %}\n      \"ssl certificate\": \"{{ config.ssl_cert }}\",\n    {%- endif %}\n    {%- if config.ssl_ca is defined %}\n      \"ssl certificate\": \"{{ config.ssl_ca }}\",\n    {%- endif %}\n    {%- if config.ssl_key is defined %}\n      \"ssl certificate\": \"{{ config.ssl_key }}\",\n    {%- endif %}\n    \"timeout\": 15\n  },\n\n  \"files\": [\n    {% for logstash_path in config.logstash_paths -%}\n        {\n          \"paths\": [\n            {% for file in logstash_path.files -%}\n              \"{{ file }}\"{% if not loop.last %},{% endif %}\n            {% endfor -%}\n          ],\n          \"fields\": { \"type\": \"{{ logstash_path.fields.type }}\" }\n        }{% if not loop.last %},{% endif %}\n    {% endfor %}\n\n  ]\n}","{\n  \"network\": {\n    \"servers\": [ \"{{ config.logstash_server_ip }}:{{ config.logstash_server_port }}\" ],\n    {%- if config.ssl_cert is defined %}\n      \"ssl certificate\": \"{{ config.ssl_cert }}\",\n    {%- endif %}\n    {%- if config.ssl_ca is defined %}\n      \"ssl certificate\": \"{{ config.ssl_ca }}\",\n    {%- endif %}\n    {%- if config.ssl_key is defined %}\n      \"ssl certificate\": \"{{ config.ssl_key }}\",\n    {%- endif %}\n    \"timeout\": 15\n  },\n\n  \"files\": [\n    {% for logstash_path in config.logstash_paths -%}\n        {\n          \"paths\": [\n            {% for file in logstash_path.files -%}\n              \"{{ file }}\"{% if not loop.last %},{% endif %}\n            {% endfor -%}\n          ],\n          \"fields\": { \"type\": \"{{ logstash_path.fields.type }}\" }\n        }{% if not loop.last %},{% endif %}\n    {% endfor %}\n\n  ]\n}\n  \"network\": {\n    \"servers\": [ \"{{ config.logstash_server_ip }}:{{ config.logstash_server_port }}\" ],\n    {%- if config.ssl_cert is defined %}\n      \"ssl certificate\": \"{{ config.ssl_cert }}\",\n    {%- endif %}\n    {%- if config.ssl_ca is defined %}\n      \"ssl certificate\": \"{{ config.ssl_ca }}\",\n    {%- endif %}\n    {%- if config.ssl_key is defined %}\n      \"ssl certificate\": \"{{ config.ssl_key }}\",\n    {%- endif %}\n    \"timeout\": 15\n  },\n\n  \"files\": [\n    {% for logstash_path in config.logstash_paths -%}\n        {\n          \"paths\": [\n            {% for file in logstash_path.files -%}\n              \"{{ file }}\"{% if not loop.last %},{% endif %}\n            {% endfor -%}\n          ],\n          \"fields\": { \"type\": \"{{ logstash_path.fields.type }}\" }\n        }{% if not loop.last %},{% endif %}\n    {% endfor %}\n\n  ]\n}","nagios_monitored_interface\n  \"network\": {\n    \"servers\": [ \"{{ config.logstash_server_ip }}:{{ config.logstash_server_port }}\" ],\n    {%- if config.ssl_cert is defined %}\n      \"ssl certificate\": \"{{ config.ssl_cert }}\",\n    {%- endif %}\n    {%- if config.ssl_ca is defined %}\n      \"ssl certificate\": \"{{ config.ssl_ca }}\",\n    {%- endif %}\n    {%- if config.ssl_key is defined %}\n      \"ssl certificate\": \"{{ config.ssl_key }}\",\n    {%- endif %}\n    \"timeout\": 15\n  },\n\n  \"files\": [\n    {% for logstash_path in config.logstash_paths -%}\n        {\n          \"paths\": [\n            {% for file in logstash_path.files -%}\n              \"{{ file }}\"{% if not loop.last %},{% endif %}\n            {% endfor -%}\n          ],\n          \"fields\": { \"type\": \"{{ logstash_path.fields.type }}\" }\n        }{% if not loop.last %},{% endif %}\n    {% endfor %}\n\n  \n  \"network\": {\n    \"servers\": [ \"{{ config.logstash_server_ip }}:{{ config.logstash_server_port }}\" ],\n    {%- if config.ssl_cert is defined %}\n      \"ssl certificate\": \"{{ config.ssl_cert }}\",\n    {%- endif %}\n    {%- if config.ssl_ca is defined %}\n      \"ssl certificate\": \"{{ config.ssl_ca }}\",\n    {%- endif %}\n    {%- if config.ssl_key is defined %}\n      \"ssl certificate\": \"{{ config.ssl_key }}\",\n    {%- endif %}\n    \"timeout\": 15\n  },\n\n  \"files\": [\n    {% for logstash_path in config.logstash_paths -%}\n        {\n          \"paths\": [\n            {% for file in logstash_path.files -%}\n              \"{{ file }}\"{% if not loop.last %},{% endif %}\n            {% endfor -%}\n          ],\n          \"fields\": { \"type\": \"{{ logstash_path.fields.type }}\" }\n        }{% if not loop.last %},{% endif %}\n    {% endfor %}\n\n  ]\n}\n  \"network\": {\n    \"servers\": [ \"{{ config.logstash_server_ip }}:{{ config.logstash_server_port }}\" ],\n    {%- if config.ssl_cert is defined %}\n      \"ssl certificate\": \"{{ config.ssl_cert }}\",\n    {%- endif %}\n    {%- if config.ssl_ca is defined %}\n      \"ssl certificate\": \"{{ config.ssl_ca }}\",\n    {%- endif %}\n    {%- if config.ssl_key is defined %}\n      \"ssl certificate\": \"{{ config.ssl_key }}\",\n    {%- endif %}\n    \"timeout\": 15\n  },\n\n  \"files\": [\n    {% for logstash_path in config.logstash_paths -%}\n        {\n          \"paths\": [\n            {% for file in logstash_path.files -%}\n              \"{{ file }}\"{% if not loop.last %},{% endif %}\n            {% endfor -%}\n          ],\n          \"fields\": { \"type\": \"{{ logstash_path.fields.type }}\" }\n        }{% if not loop.last %},{% endif %}\n    {% endfor %}\n\n  ]\n}","logstash_port","logstash.local","logstash-certs","logstash_server","logstash_cert","logstash_forwarder_cert_paht","logstash_forwarder_cert_path","ansible_local","logstash_host","agent","openstack","EPEL","epel7","bacup"],"replaceHistory":[],"pathsHistory":[]}}}